{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "additionalProperties": {
        "type": "object",
        "properties": {
            "SoftwareSystems": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/SoftwareSystem"
                }
            }
        }
    },
    "definitions": {
        "SoftwareSystem": {
            "type": "object",
            "properties": {
                "Boundary": {
                    "type": "string",
                    "enum": [
                        "Internal",
                        "External"
                    ]
                },
                "Containers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Container"
                    }
                },
                "Interfaces": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Interface"
                    }
                }
            }
        },
        "Container": {
            "type": "object",
            "properties": {
                "ContainerType": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "Api",
                        "Database",
                        "ServerConsole",
                        "Queue",
                        "ClientDesktop",
                        "WebApplication",
                        "FileSystem",
                        "ServerlessFunction"
                      ]},
                      {"type": "string", "maxLength": 0}
                    ] 
                },
                "Interfaces": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Interface"
                    }
                }
            }
        },
        "Interface": {
            "type": "object",
            "properties": {
                "Flow": {
                    "$ref": "#/definitions/Flow.None"
                }
            }
        },
        "Flow.None": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "None"
                    ]
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
        "Flow.Use": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Use"
                    ]
                },
                "Expression": {
				  "$ref": "#/definitions/Interfaces"
				}
            }
        },
        "Flow.If": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "If"
                    ]
                },
                "Expression": {
                    "type": "string"
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.ElseIf"
                            },
                            {
                                "$ref": "#/definitions/Flow.Else"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.ElseIf": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "ElseIf"
                    ]
                },
                "Expression": {
                    "type": "string"
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Else": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Else"
                    ]
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Finally"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Loop": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Loop"
                    ]
                },
                "Expression": {
                    "type": "string"
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Group": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Group"
                    ]
                },
                "Expression": {
                    "type": "string"
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Try": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Try"
                    ]
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.Catch"
                            },
                            {
                                "$ref": "#/definitions/Flow.Finally"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Catch": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Catch"
                    ]
                },
                "Expression": {
                    "type": "string"
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.Finally": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Finally"
                    ]
                },
                "Flows": {
                    "type": "array",
                    "items": {
                        "anyOf": [
							{
                                "$ref": "#/definitions/Flow.Use"
                            },
                            {
                                "$ref": "#/definitions/Flow.If"
                            },
                            {
                                "$ref": "#/definitions/Flow.Loop"
                            },
                            {
                                "$ref": "#/definitions/Flow.Group"
                            },
                            {
                                "$ref": "#/definitions/Flow.Try"
                            },
                            {
                                "$ref": "#/definitions/Flow.ThrowException"
                            },
                            {
                                "$ref": "#/definitions/Flow.Return"
                            }
                        ]
                    }
                }
            }
        },
		"Flow.ThrowException": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "ThrowException"
                    ]
                },
                "Expression": {
                    "type": "string"
                }
            }
        },
		"Flow.Return": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Return"
                    ]
                },
                "Expression": {
                    "type": "string"
                }
            }
        },
		"Interfaces": {
		  "type": "string",
		  "enum": []
		}
    }
}
