@startuml

title Trader X Example - TraderX - Trade Processor - Start - Sequence - Container level

participant "External" as C4InterFlow.SoftwareSystems.ExternalSystem

box "TraderX" #White
    participant "Trade Processor" as TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor
    participant "Trade Feed" as TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed
    database "TraderX DB" as TraderXExample.SoftwareSystems.TraderX.Containers.TraderXDB
end box


C4InterFlow.SoftwareSystems.ExternalSystem -> TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor : Start
group Start
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed : Receive Trade Request\n[SocketIO]
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TraderXDB : Select Current Positions\n[JDBC]
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TraderXDB : Save Trade State\n[JDBC]
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TraderXDB : Save Position State\n[JDBC]
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed : Send Updates To Trades\n[SocketIO]
TraderXExample.SoftwareSystems.TraderX.Containers.TradeProcessor -> TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed : Send Updates To Positions\n[SocketIO]
end


@enduml
